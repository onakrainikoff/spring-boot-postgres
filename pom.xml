<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.6</version>
        <relativePath/>
    </parent>

    <groupId>ru.on8off</groupId>
    <artifactId>spring-boot-postgres</artifactId>
    <version>1.0.${revision}</version>

    <properties>
        <revision>local</revision>
        <java.version>16</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.5</version>
        </dependency>
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-52</artifactId>
            <version>2.14.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>it</id>
            <activation>
                <property>
                    <name>docker_host</name>
                </property>
            </activation>
            <properties>
                <docker_port>2375</docker_port>
                <postgres_master_port>5432</postgres_master_port>
                <postgres_slave_port>5433</postgres_slave_port>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <environmentVariables>
                                <spring.profiles.active>tests-remote</spring.profiles.active>
                                <postgres_master_host>${docker_host}</postgres_master_host>
                                <postgres_master_port>${postgres_master_port}</postgres_master_port>
                                <postgres_slave_host>${docker_host}</postgres_slave_host>
                                <postgres_slave_port>${postgres_slave_port}</postgres_slave_port>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.38.0</version>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <dockerHost>tcp://${docker_host}:${docker_port}</dockerHost>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>bitnami/postgresql:11</name>
                                    <alias>postgresql-master</alias>
                                    <run>
                                        <hostname>postgresql-master</hostname>
                                        <env>
                                            <POSTGRESQL_USERNAME>postgres</POSTGRESQL_USERNAME>
                                            <POSTGRESQL_PASSWORD>postgres</POSTGRESQL_PASSWORD>
                                            <POSTGRESQL_DATABASE>postgres</POSTGRESQL_DATABASE>
                                            <POSTGRESQL_REPLICATION_MODE>master</POSTGRESQL_REPLICATION_MODE>
                                            <POSTGRESQL_REPLICATION_USER>repl_user</POSTGRESQL_REPLICATION_USER>
                                            <POSTGRESQL_REPLICATION_PASSWORD>repl_password</POSTGRESQL_REPLICATION_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>${postgres_master_port}:5432</port>
                                        </ports>
                                        <network>
                                            <name>${groupId}-${artifactId}-network</name>
                                        </network>
                                        <wait>
                                            <log>database system is ready to accept connections</log>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>bitnami/postgresql:11</name>
                                    <alias>postgresql-slave</alias>
                                    <run>
                                        <hostname>postgresql-slave</hostname>
                                        <env>
                                            <POSTGRESQL_USERNAME>postgres</POSTGRESQL_USERNAME>
                                            <POSTGRESQL_PASSWORD>postgres</POSTGRESQL_PASSWORD>
                                            <POSTGRESQL_DATABASE>postgres</POSTGRESQL_DATABASE>
                                            <POSTGRESQL_REPLICATION_MODE>slave</POSTGRESQL_REPLICATION_MODE>
                                            <POSTGRESQL_MASTER_HOST>postgresql-master</POSTGRESQL_MASTER_HOST>
                                            <POSTGRESQL_REPLICATION_USER>repl_user</POSTGRESQL_REPLICATION_USER>
                                            <POSTGRESQL_REPLICATION_PASSWORD>repl_password</POSTGRESQL_REPLICATION_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>${postgres_slave_port}:5432</port>
                                        </ports>
                                        <network>
                                            <name>${groupId}-${artifactId}-network</name>
                                        </network>
                                        <wait>
                                            <log>database system is ready to accept read only connections</log>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <version>8.0.0</version>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>migrate</goal>
                                    <goal>info</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <user>postgres</user>
                            <password>postgres</password>
                            <url>jdbc:postgresql://${docker_host}:${postgres_master_port}/postgres</url>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>